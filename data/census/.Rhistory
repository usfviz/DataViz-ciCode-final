# =========================================
setwd('../race')
x <- read.csv( "ACS_15_5YR_B02001.csv", stringsAsFactors = F, header = T)
# percent white
# percent black
# percent Indian
# percent Asian
# HISPANIC MISSING - merge in from seperate dataset - check if totals match
# percent other
colnames(x)
COI <- c('Geography',
"Estimate..Total.",
"Estimate..Total....White.alone",
"Estimate..Total....Black.or.African.American.alone",
"Estimate..Total....Asian.alone",
"Estimate..Total....American.Indian.and.Alaska.Native.alone",
"Estimate..Total....Native.Hawaiian.and.Other.Pacific.Islander.alone"
)
x_sub <- x[COI]
# Get hispanic demographic information
setwd('../hispanic/')
x <- read.csv( "ACS_15_5YR_B03002.csv", stringsAsFactors = F, header = T)
sum(x_sub$Estimate..Total. != x["Estimate..Total."] ) # these values are the same - can trust data
sum(x_sub$Geography != x['Geography'] ) # the census tracks are in the same place (redundant double check from above)
# Census information does not consider hispanic as a race, rather as an amalgamation of other races
# append hispanic information to the dataset and potentially create interaction columns
COI <- c("Estimate..Hispanic.or.Latino.")
x_sub$Estimate..Total....Hispanic.alone <- unlist(x[COI])
# Verify the total of people t
# mutute dataset to be just percents
x_sub <- mutate(x_sub,
Percent..White.alone = round(Estimate..Total....White.alone / Estimate..Total., 3),
Percent..Black.or.African.American.alone = round(Estimate..Total....Black.or.African.American.alone /Estimate..Total., 3),
Percent..Asian.alone = round(Estimate..Total....Asian.alone / Estimate..Total., 3),
Percent..American.Indian.and.Alaska.Native.alone = round(Estimate..Total....American.Indian.and.Alaska.Native.alone / Estimate..Total., 3),
Percent..Native.Hawaiian.and.Other.Pacific.Islander.alone = round(Estimate..Total....Native.Hawaiian.and.Other.Pacific.Islander.alone / Estimate..Total., 3),
Percent..Hispanic.alone = round(Estimate..Total....Hispanic.alone / Estimate..Total., 3))
# reformat census track info
x_sub$ctract <- unlist(lapply(x_sub$Geography, filter_data))
x_sub <- x_sub %>% select(-Geography, -Estimate..Total.,
- Estimate..Total....White.alone,
- Estimate..Total....Black.or.African.American.alone,
- Estimate..Total....Asian.alone,
- Estimate..Total....American.Indian.and.Alaska.Native.alone,
- Estimate..Total....Native.Hawaiian.and.Other.Pacific.Islander.alone,
- Estimate..Total....Hispanic.alone)
data_heavy <-  merge(data_heavy, x_sub, by = 'ctract', all.x = T)
# Get the count Voters without Census information
missing_na$race <- c(sum(is.na(data_heavy$Percent..White.alone)), sum(is.na(data_heavy$Percent..White.alone)/number_voters))
#                  MERGE EMPLOYMENT INFORMATION TO VOTERS:
# =======================================================
setwd('../employmentstatus')
x <- read.csv( "ACS_15_5YR_S2301.csv", stringsAsFactors = F, header = T)
# Employment Rate
# Unemployment Rate - are these numbers complimentary - Definitely not...on average 20 - 30 percent missing
COI <- c('Geography',
"Unemployment.rate..Estimate..Population.16.years.and.over",
"Employment.Population.Ratio..Estimate..Population.16.years.and.over",
"Labor.Force.Participation.Rate..Estimate..Population.16.years.and.over"
)
x_sub <- x[COI]
head(x_sub)
# reformat census track info
ctract <- unlist(lapply(x_sub$Geography, filter_data))
x_sub <- select(x_sub, -Geography)
x_sub <- x_sub/100.0
x_sub$ctract <- ctract
data_heavy <-  merge(data_heavy, x_sub, by = 'ctract', all.x = T)
# Get the count Voters without Census information
missing_na$employment <- c(sum(is.na(data_heavy$Unemployment.rate..Estimate..Population.16.years.and.over)), sum(is.na(data_heavy$Unemployment.rate..Estimate..Population.16.years.and.over)/number_voters))
#     MERGE EDUCATIONAL ATTAINMENT INFORMATION TO VOTERS:
# =======================================================
setwd('../educationalattainment')
x <- read.csv( "ACS_15_5YR_S1501.csv", stringsAsFactors = F, header = T)
# Employment Rate
# Unemployment Rate - are these numbers complimentary - Definitely not...on average 20 - 30 percent missing
COI <- c("Geography",
"Total..Estimate..Population.18.to.24.years",
"Total..Estimate..Population.25.years.and.over",
"Total..Estimate..Population.18.to.24.years...Less.than.high.school.graduate",
"Total..Estimate..Population.18.to.24.years...Bachelor.s.degree.or.higher",
"Total..Estimate..Population.18.to.24.years...High.school.graduate..includes.equivalency.",
"Total..Estimate..Population.25.years.and.over...High.school.graduate..includes.equivalency.",
"Total..Estimate..Population.25.years.and.over...Bachelor.s.degree",
"Total..Estimate..Population.25.years.and.over...Graduate.or.professional.degree")
x_sub <- x[COI]
x_sub$Total <- (x_sub$Total..Estimate..Population.18.to.24.years + x_sub$Total..Estimate..Population.25.years.and.over)
x_sub$percent_less_than_high_school <- round(((x_sub$Total..Estimate..Population.18.to.24.years...Less.than.high.school.graduate +
x_sub$Total..Estimate..Population.25.years.and.over -
(x_sub$Total..Estimate..Population.25.years.and.over...High.school.graduate..includes.equivalency. +
x_sub$Total..Estimate..Population.25.years.and.over...Bachelor.s.degree +
x_sub$Total..Estimate..Population.25.years.and.over...Graduate.or.professional.degree)) / x_sub$Total),3)
x_sub$percent_high_school = round(((x_sub$Total..Estimate..Population.18.to.24.years...High.school.graduate..includes.equivalency. +
x_sub$Total..Estimate..Population.25.years.and.over...High.school.graduate..includes.equivalency.) / x_sub$Total), 3)
x_sub$percent_college_or_above = round(((x_sub$Total..Estimate..Population.18.to.24.years...Bachelor.s.degree.or.higher +
x_sub$Total..Estimate..Population.25.years.and.over...Bachelor.s.degree +
x_sub$Total..Estimate..Population.25.years.and.over...Graduate.or.professional.degree) / x_sub$Total), 3)
x_sub$percent_college_or_above + x_sub$percent_high_school + x_sub$percent_less_than_high_school # Generally in the 90%
x_sub <- x_sub[c('Geography', 'percent_high_school', 'percent_college_or_above', 'percent_less_than_high_school')]
# reformat census track info
x_sub$ctract <- unlist(lapply(x_sub$Geography, filter_data))
x_sub <- select(x_sub, -Geography)
data_heavy <-  merge(data_heavy, x_sub, by = 'ctract', all.x = T)
# Get the count Voters without Census information
missing_na$education <- c(sum(is.na(data_heavy$percent_college_or_above)), sum(is.na(data_heavy$percent_college_or_above)/number_voters))
#                    MERGE COMMUTE INFORMATION TO VOTERS:
# =======================================================
setwd('../meansofcommute/')
x <- read.csv( "ACS_15_5YR_S0801.csv", stringsAsFactors = F, header = T)
# Employment Rate
# Unemployment Rate - are these numbers complimentary - Definitely not...on average 20 - 30 percent missing
COI <- c("Geography",
"Total..Estimate..Workers.16.years.and.over",
"Total..Estimate..MEANS.OF.TRANSPORTATION.TO.WORK...Car..truck..or.van",
"Total..Estimate..MEANS.OF.TRANSPORTATION.TO.WORK...Car..truck..or.van...Carpooled",
"Total..Estimate..MEANS.OF.TRANSPORTATION.TO.WORK...Public.transportation..excluding.taxicab." ,
"Total..Estimate..MEANS.OF.TRANSPORTATION.TO.WORK...Walked" ,
"Total..Estimate..MEANS.OF.TRANSPORTATION.TO.WORK...Bicycle",
"Total..Estimate..MEANS.OF.TRANSPORTATION.TO.WORK...Taxicab..motorcycle..or.other.means",
"Total..Estimate..MEANS.OF.TRANSPORTATION.TO.WORK...Worked.at.home")
x_sub <- x[COI]
# reformat census track info
ctract <- unlist(lapply(x_sub$Geography, filter_data))
x_sub <- select(x_sub, -Geography)
x_sub <- x_sub/100.0
x_sub$Total..Estimate..Workers.16.years.and.over <- x_sub$Total..Estimate..Workers.16.years.and.over * 100
data_heavy <-  merge(data_heavy, x_sub, by = 'ctract', all.x = T)
head(data_heavy)
x_sub$ctract <- ctract
data_heavy <-  merge(data_heavy, x_sub, by = 'ctract', all.x = T)
head(data_heavy)
missing_na$commute <- c(sum(is.na(data_heavy$Total..Estimate..Workers.16.years.and.over)), sum(is.na(data_heavy$Total..Estimate..Workers.16.years.and.over))/number_voters)
missing_na
setwd('../earnings')
x <- read.csv( "ACS_15_5YR_S2001.csv", stringsAsFactors = F, header = T)
# Employment Rate
# Unemployment Rate - are these numbers complimentary - Definitely not...on average 20 - 30 percent missing
COI <- c("Geography",
"Total..Estimate..Median.earnings..dollars.",
"Total..Estimate..Mean.earnings..dollars.")
x_sub <- x[COI]
# reformat census track info
x_sub$ctract <- unlist(lapply(x_sub$Geography, filter_data))
x_sub <- select(x_sub, -Geography)
data_heavy <-  merge(data_heavy, x_sub, by = 'ctract', all.x = T)
head(data_heavy)
setwd("~/Desktop/PracticumLA/VoterData/Data/Final Voter Data/")
write.csv(data_heavy, 'census_aggregate.csv')
#    EXAMINATION OF MISSING CENSUS:
# =================================
for (name in colnames(data_heavy)) {
print (name)
}
?sort()
order()
colnames(data_heavy)
rm(ls = list())
cat('\014')
# THIS SCRIPT IS TO VALIDATE OUR CENSUS DATA AND DO SOME EDA
setwd('~/Desktop/PracticumLA/VoterData/Data/Final Voter Data/')
d <- read.csv('census_aggregate.csv')
library(dplyr)
colnames(d)
d[,14:]
d[,14:42]
c <- d[,14:42]
head(c)
c <- d[,14:43]
c <- d[,14:42]
c <- d[,13:42]
head(c)
c <- d[,14:42]
head(c)
c$ctract <- d$ctract
c <- c %>% group_by(ctract) %>% summarise_all(max)
c
d <- read.csv('voter_data_v3.csv')
colnames(d)
setwd('~/Desktop/PracticumLA/VoterData/Data/census/')
b <- read.csv('vbmdocensustracts.csv')
b$ctract <- unlist(lapply(b$ctract, function (x) {as.numeric(gsub('CENSUS TRACT 10-', '', x))}))
b
b$ctract
head(b)
b <- select(b, vid, ctract)
d <- merge(x = d, y = b, by = vid)
d <- merge(x = d, y = b, by = 'vid')
head(d)
is.null(d$ctract)
is.na(d$ctract)
sum(is.na(d$ctract))
colnames(d)
d <- d %>% group_by(ctract) %>% summarise(count = n(),
mean_distance = mean(distance),
mean_duration = mean(duration),
mean_rank = mean(rank))
warnings()
?mean()
d <- d %>% group_by(ctract) %>% summarise(count = n(),
mean_distance = mean(distance, na.rm = TRUE),
mean_duration = mean(duration, na.rm = TRUE),
mean_rank = mean(rank, na.rm = TRUE))
# get the census and necessary data
d <- read.csv('voter_data_v3.csv')
setwd('~/Desktop/PracticumLA/VoterData/Data/census/')
b <- read.csv('vbmdocensustracts.csv')
b$ctract <- unlist(lapply(b$ctract, function (x) {as.numeric(gsub('CENSUS TRACT 10-', '', x))}))
b <- select(b, vid, ctract)
?mean()
# merge together
d <- merge(x = d, y = b, by = 'vid')
colnames(d)
d <- d %>% group_by(ctract) %>% summarise(count = n(),
mean_distance = mean(distance, na.rm = TRUE),
mean_duration = mean(duration, na.rm = TRUE),
mean_rank = mean(rank, na.rm = TRUE))
warnings()
d <- read.csv('voter_data_v3.csv')
setwd('~/Desktop/PracticumLA/VoterData/Data/Final Voter Data/')
d <- read.csv('voter_data_v3.csv')
setwd('~/Desktop/PracticumLA/VoterData/Data/census/')
b <- read.csv('vbmdocensustracts.csv')
b$ctract <- unlist(lapply(b$ctract, function (x) {as.numeric(gsub('CENSUS TRACT 10-', '', x))}))
b <- select(b, vid, ctract)
?mean()
# merge together
d <- merge(x = d, y = b, by = 'vid')
colnames(d)
d <- d %>% group_by(ctract) %>% summarise(count = n(),
mean_distance = mean(distance, na.rm = TRUE),
mean_duration = mean(duration, na.rm = TRUE),
mean_rank = mean(rank, na.rm = TRUE))
warnings()
d
setwd('~/Desktop/PracticumLA/VoterData/Data/Final Voter Data/')
d <- read.csv('census_aggregate.csv')
library(dplyr)
# I want to know how it correlates to the count of voters in a census track
# I want to know how it correlates to the average distance travelled per census track
# I want to know it correlates to the time travelled per census track
#
# ---------------  Create Census Track Stub
c <- d[,14:42]
c$ctract <- d$ctract
# ---------------  Reduce to single values
c <- c %>% group_by(ctract) %>% summarise_all(max)
# ---------------  Get the count of voters per census track
# get the census and necessary data
d <- read.csv('voter_data_v3.csv')
head(d)
rm(ls = list())
cat('\014')
# THIS SCRIPT IS TO VALIDATE OUR CENSUS DATA AND DO SOME EDA
setwd('~/Desktop/PracticumLA/VoterData/Data/Final Voter Data/')
d <- read.csv('census_aggregate.csv')
library(dplyr)
# I want to know how it correlates to the count of voters in a census track
# I want to know how it correlates to the average distance travelled per census track
# I want to know it correlates to the time travelled per census track
#
# ---------------  Create Census Track Stub
c <- d[,14:42]
c$ctract <- d$ctract
# ---------------  Reduce to single values
c <- c %>% group_by(ctract) %>% summarise_all(max)
# ---------------  Get the count of voters per census track
# get the census and necessary data
d <- read.csv('voter_data_v3.csv')
head(d)
setwd('~/Desktop/PracticumLA/VoterData/Data/census/')
b <- read.csv('vbmdocensustracts.csv')
b$ctract <- unlist(lapply(b$ctract, function (x) {as.numeric(gsub('CENSUS TRACT 10-', '', x))}))
b <- select(b, vid, ctract)
?mean()
# merge together
d <- merge(x = d, y = b, by = 'vid')
colnames(d)
d <- d %>% group_by(ctract) %>% summarise(count = n(),
mean_distance = mean(distance, na.rm = TRUE),
mean_duration = mean(duration, na.rm = TRUE),
mean_rank = mean(dropoff_rank, na.rm = TRUE))
head(D)
head(d)
setwd('~/Desktop/PracticumLA/VoterData/Data/Final Voter Data/')
d <- read.csv('census_aggregate.csv')
library(dplyr)
# I want to know how it correlates to the count of voters in a census track
# I want to know how it correlates to the average distance travelled per census track
# I want to know it correlates to the time travelled per census track
#
# ---------------  Create Census Track Stub
c <- d[,14:42]
c$ctract <- d$ctract
# ---------------  Reduce to single values
c <- c %>% group_by(ctract) %>% summarise_all(max)
# ---------------  Get the count of voters per census track
# get the census and necessary data
d <- read.csv('voter_data_v3.csv')
head(d)
setwd('~/Desktop/PracticumLA/VoterData/Data/census/')
b <- read.csv('vbmdocensustracts.csv')
b$ctract <- unlist(lapply(b$ctract, function (x) {as.numeric(gsub('CENSUS TRACT 10-', '', x))}))
b <- select(b, vid, ctract)
?mean()
# merge together
d <- merge(x = d, y = b, by = 'vid')
colnames(d)
d <- d %>% group_by(ctract) %>% summarise(count = n(),
mean_distance = mean(distance, na.rm = TRUE),
mean_duration = mean(duration, na.rm = TRUE),
mean_rank = mean(dropoff_rank, na.rm = TRUE),
median_rank = median(dropoff_rank, na.rm = TRUE))
head(d)
rm(ls = list())
cat('\014')
# THIS SCRIPT IS TO VALIDATE OUR CENSUS DATA AND DO SOME EDA
setwd('~/Desktop/PracticumLA/VoterData/Data/Final Voter Data/')
d <- read.csv('census_aggregate.csv')
library(dplyr)
# I want to know how it correlates to the count of voters in a census track
# I want to know how it correlates to the average distance travelled per census track
# I want to know it correlates to the time travelled per census track
# -------------------------------------------- GET CENSUS TRACK INFORMATION
# --------------------------------------------------------------------------
#
# ---------------  Create Census Track Stub
c <- d[,14:42]
c$ctract <- d$ctract
# ---------------  Reduce to single values
c <- c %>% group_by(ctract) %>% summarise_all(max)
# -------------------------------------------- GET VOTER DROPOFF INFORMATION
# --------------------------------------------------------------------------
# get the census and necessary data
d <- read.csv('voter_data_v3.csv')
head(d)
setwd('~/Desktop/PracticumLA/VoterData/Data/census/')
b <- read.csv('vbmdocensustracts.csv')
b$ctract <- unlist(lapply(b$ctract, function (x) {as.numeric(gsub('CENSUS TRACT 10-', '', x))}))
b <- select(b, vid, ctract)
?mean()
# merge together
nrow(d)
e <- merge(x = d, y = b, by = 'vid')
nrow(e)
d <- merge(x = d, y = b, by = 'vid')
d <- merge(x = d, y = b, by = 'vid')
d <- d %>% group_by(ctract) %>% summarise(count = n(),
mean_distance = mean(distance, na.rm = TRUE),
mean_duration = mean(duration, na.rm = TRUE),
mean_rank = mean(dropoff_rank, na.rm = TRUE),
median_rank = median(dropoff_rank, na.rm = TRUE)) # to account for skew could include median elsewhere
rm(ls = list())
cat('\014')
# THIS SCRIPT IS TO VALIDATE OUR CENSUS DATA AND DO SOME EDA
setwd('~/Desktop/PracticumLA/VoterData/Data/Final Voter Data/')
d <- read.csv('census_aggregate.csv')
library(dplyr)
# I want to know how it correlates to the count of voters in a census track
# I want to know how it correlates to the average distance travelled per census track
# I want to know it correlates to the time travelled per census track
# -------------------------------------------- GET CENSUS TRACK INFORMATION
# --------------------------------------------------------------------------
#
# ---------------  Create Census Track Stub
c <- d[,14:42]
c$ctract <- d$ctract
# ---------------  Reduce to single values
c <- c %>% group_by(ctract) %>% summarise_all(max)
# -------------------------------------------- GET VOTER DROPOFF INFORMATION
# --------------------------------------------------------------------------
# get the census and necessary data
d <- read.csv('voter_data_v3.csv')
setwd('~/Desktop/PracticumLA/VoterData/Data/census/')
b <- read.csv('vbmdocensustracts.csv')
b$ctract <- unlist(lapply(b$ctract, function (x) {as.numeric(gsub('CENSUS TRACT 10-', '', x))}))
b <- select(b, vid, ctract)
# merge together
nrow(d)
d <- merge(x = d, y = b, by = 'vid')
d <- d %>% group_by(ctract) %>% summarise(count = n(),
mean_distance = mean(distance, na.rm = TRUE),
mean_duration = mean(duration, na.rm = TRUE),
mean_rank = mean(dropoff_rank, na.rm = TRUE),
median_rank = median(dropoff_rank, na.rm = TRUE)) # to account for skew could include median elsewhere
corr_data <- merge(d, c, by = 'ctract', all.x = TRUE)
nrow(corr_data)
nrow(c)
nrow(d)
head(corr_data)
corrgram(corr_data)
library(corrplot)
corrplot(corr_data)
corr_data
corrplot(corr_data)
head(corr_data)
corr_data <- corr_data %>% select(-ctract)
corrplot(corr_data)
head(corr_data)
corrplot(corr_data)
corrplot(cor(corr_data))
corr_data <- merge(d, c, by = 'ctract', all.x = TRUE)
corr_data <- corr_data %>% select(-ctract)
colnames(corr_data)
new_names <- c("count", "mean_distance", "mean_duration", "mean_rank", "median_rank", "total_pop", "total_pop_ME", "Males", "Females",
"child_dependency", "over_18", "over_65", "white", "black", "asian", "american_indian", "islander", "hispanic", "unemployment",
"employment", "labor_participation", 'high_school', "percent_college", 'less_high_school', 'workers_over_16', 'car', 'carpooled',
'public_trans', 'walked', 'bicycle', 'other_trans', 'worked_at_home', 'median_earnings', 'mean_earnings')
corrplot(cor(corr_data))
colnames(corr_data) <- new_names
corrplot(cor(corr_data))
?corrplot
corrplot(cor(corr_data, na.rm = TRUE))
corrplot(cor(corr_data, rm.na = TRUE))
cor
?cor
corrplot(cor(corr_data, na.rm = TRUE))
corrplot(cor(x = corr_data, y = NULL, na.rm = TRUE))
cor(x = corr_data, y = NULL, na.rm = TRUE)
cor(x = corr_data, y = NULL, na.rm = TRUE, use = 'complete.obs')
cor(x = corr_data, na.rm = TRUE, use = 'complete.obs')
cor(x = corr_data, use = 'complete.obs')
corrplot(cor(x = corr_data, use = 'complete.obs'))
png(height = 1200, width = 1500, pointsize = 15, file = 'corr.png')
corrplot(cor(x = corr_data, use = 'complete.obs'))
png(height = 1200, width = 1500, pointsize = 15, file = 'corr.png')
corrplot(cor(x = corr_data, use = 'complete.obs'))
cex.before -par('cex')
cex.before <- par('cex')
par(cex = .7)
corrplot(cor(x = corr_data, use = 'complete.obs'), method = 'color', order = 'AOE', 'tl.cex' = 1/par('cex'), cl.cex = 1/par('cex'))
par(cex = .2)
corrplot(cor(x = corr_data, use = 'complete.obs'), method = 'color', order = 'AOE', 'tl.cex' = 1/par('cex'), cl.cex = 1/par('cex'))
?corrplot
par(cex = .02)
corrplot(cor(x = corr_data, use = 'complete.obs'), method = 'color', order = 'AOE', 'tl.cex' = 1/par('cex'), cl.cex = 1/par('cex'))
corrplot(cor(x = corr_data, use = 'complete.obs'), method = 'color', order = 'AOE', 'tl.cex' = 1/par('cex'), cl.cex = 1/par('cex'))
cl.cex = 1/par('cex'))
par(cex = 3)
corrplot(cor(x = corr_data, use = 'complete.obs'),
method = 'color', order = 'AOE', 'tl.cex' = 1/par('cex'),
cl.cex = 1/par('cex'))
par('cex') <- cex.before
par(cex = cex.before)
corrplot(cor(x = corr_data, use = 'complete.obs'))
corr_data <- merge(d, c, by = 'ctract', all.x = TRUE)
corr_data <- corr_data %>% select(-ctract)
CN <- colnames(corr_data)
num_names <- c(1:length(CN))
colnames(corr_data) <- num_names
cor(x = corr_data, use = 'complete.obs')
par(cex = cex.before)
corrplot(cor(x = corr_data, use = 'complete.obs'))
colnames(corr_data) <- new_names
cor(x = corr_data, use = 'complete.obs')
corrplot(cor(x = corr_data, use = 'complete.obs'))
corr_data[new_names]
corr_data <- corr_data[new_names]
cor(x = corr_data, use = 'complete.obs')
corrplot(cor(x = corr_data, use = 'complete.obs'))
figuredirectory <- paste(thisdirectory, '/figures/corrplot.png', sep = '')
img <- readPNG(figuredirectory)
grid.raster(img)
knitr::opts_chunk$set(echo = TRUE)
library(scales)
library(png)
library(grid)
figuredirectory <- paste(thisdirectory, '/figures/corrplot.png', sep = '')
img <- readPNG(figuredirectory)
grid.raster(img)
print (getwd())
figuredirectory <- paste(thisdirectory, '/figures/corrplot.png', sep = '')
img <- readPNG(figuredirectory)
grid.raster(img)
print (getwd())
figuredirectory <- paste(thisdirectory, './figures/corrplot.png', sep = '')
img <- readPNG(figuredirectory)
grid.raster(img)
print (getwd())
img <- readPNG('./figures/corrplot.png')
grid.raster(img)
print (getcd())
base_dir <- '~/Desktop/PracticumLA/VoterData/Data/'
knitr::opts_chunk$set(echo = TRUE)
library(scales)
library(png)
library(grid)
base_dir <- '~/Desktop/PracticumLA/VoterData/Data/'
img <- readPNG(base_dir + 'census/figures/corrplot.png')
grid.raster(img)
img <- readPNG(paste0(base_dir, 'census/figures/corrplot.png'))
grid.raster(img)
par(oma = c(0,0,2,0))
cor(x = corr_data, use = 'complete.obs')
corrplot(cor(x = corr_data, use = 'complete.obs'))
dev.off()
corr_data <- corr_data[new_names]
par(oma = c(0,0,2,0))
png(filename = 'corrplot.png')
cor(x = corr_data, use = 'complete.obs')
corrplot(cor(x = corr_data, use = 'complete.obs'))
dev.off()
plot(corr_data$count)
dev.off()
dev.off()
dev.off()
dev.off()
dev.list()
rm(ls = list())
cat('\014')
rm(ls = list())
rm(ls = list())
rm(ls = list())
